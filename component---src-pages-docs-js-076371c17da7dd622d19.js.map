{"version":3,"sources":["webpack:///./src/pages/docs.js"],"names":["DocsPage","_ref","edges","data","allMarkdownRemark","pages","filter","e","node","frontmatter","path","map","Object","assign","id","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_LayoutBasic__WEBPACK_IMPORTED_MODULE_5__","className","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","title","_ref2","key","pageQuery"],"mappings":"iMAqCeA,UA3BE,SAAAC,GAAgD,IAAhBC,EAAgBD,EAA7CE,KAAQC,kBAAqBF,MACzCG,EAAQH,EAAQA,EACnBI,OAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,YAAYC,MAAoC,MAA5BH,EAAEC,KAAKC,YAAYC,OAC1DC,IAAI,SAAAJ,GAAC,OAAAK,OAAAC,OAAA,GAAUN,EAAEC,KAAKC,YAAjB,CAA8BK,GAAIP,EAAEC,KAAKM,OAAS,GAC1D,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKH,GAAG,QACNC,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACjBJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACG,EAAA,KAAD,CAAMC,GAAG,OAAOC,MAAM,qBAAtB,QAGAjB,EAAMM,IAAI,SAAAY,GAAA,IAAGD,EAAHC,EAAGD,MAAOZ,EAAVa,EAAUb,KAAMI,EAAhBS,EAAgBT,GAAhB,OACRC,EAAAC,EAAAC,cAAA,MAAIO,IAAKV,GACPC,EAAAC,EAAAC,cAACG,EAAA,KAAD,CAAMC,GAAIX,EAAMY,MAAOA,GAAQA,WAc1C,IAAMG,EAAS","file":"component---src-pages-docs-js-076371c17da7dd622d19.js","sourcesContent":["/**\n * List all markdown pages that are not \"/\"\n *\n * This is a demo-lister, and eventually will probly be a markdown document that is hand-edited.\n */\nimport React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Page from '../components/LayoutBasic'\n\nconst DocsPage = ({ data: { allMarkdownRemark: { edges } } }) => {\n  const pages = edges ? edges\n    .filter(e => e.node.frontmatter.path && e.node.frontmatter.path !== '/')\n    .map(e => ({ ...e.node.frontmatter, id: e.node.id })) : []\n  return (\n    <Page>\n      <div id='docs'>\n        <section className='content'>\n          <h2>Index</h2>\n          <ul>\n            <li>\n              <Link to='/api' title='API Documentation'>API</Link>\n            </li>\n            {\n              pages.map(({ title, path, id }) => (\n                <li key={id} >\n                  <Link to={path} title={title}>{title}</Link>\n                </li>\n              ))\n            }\n          </ul>\n        </section>\n      </div>\n    </Page>\n  )\n}\n\nexport default DocsPage\n\n// TODO: add filter to query, instead of in component\nexport const pageQuery = graphql`\nquery {\n  allMarkdownRemark {\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          path\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}